# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-10-28 20:01
from __future__ import unicode_literals

import CAB.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cab_number', models.CharField(max_length=255, unique=True)),
                ('vrc', models.FileField(blank=True, max_length=500, null=True, upload_to=CAB.models.vrc_file_name)),
                ('cab_type', models.CharField(choices=[('v', 'SUV, seats up to 6 riders'), ('s', 'SEDAN, seats up to 4 riders'), ('m', 'MINIVAN, seats up to 4 riders'), ('o', 'Other')], max_length=255, unique=True)),
                ('status', models.CharField(choices=[('b', 'already booked'), ('u', 'temporary unavailable'), ('a', 'available for booking')], max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('s', 'from'), ('d', 'to')], max_length=255, unique=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('c', 'SHARING'), ('i', 'NOT SHARING')], max_length=255, unique=True)),
                ('status', models.CharField(choices=[('c', 'COMPLETED'), ('b', 'BOOKED'), ('c_u', 'CANCELED_BY_USER'), ('c_d', 'CANCELED BY DRIVERER'), ('i', 'IN PROGRESS')], max_length=255, unique=True)),
                ('cab', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rides_cab', to='CAB.Cab')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='routes_destination', to='CAB.Location')),
                ('source', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='routes_source', to='CAB.Location')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('d', 'DRIVER'), ('o', 'OWNER'), ('p', 'PASSENGER')], default='p', max_length=64)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', CAB.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=CAB.models.photo_file_name)),
                ('pan_card', models.FileField(blank=True, max_length=500, null=True, upload_to=CAB.models.pan_card_file_name)),
                ('license', models.FileField(blank=True, max_length=500, null=True, upload_to=CAB.models.license_file_name)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='edited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='ride',
            name='driver',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rides_dirvers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ride',
            name='passenger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rides_passengers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ride',
            name='route',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rides_routes', to='CAB.Route'),
        ),
        migrations.AddField(
            model_name='cab',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cabs', to=settings.AUTH_USER_MODEL),
        ),
    ]
